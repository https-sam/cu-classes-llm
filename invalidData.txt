[{input: "What is Discrete Structures Workgroup?", output: "Discrete Structures Workgroup is a class that provides additional problem-solving practice and guidance for students enrolled in CSCI 2824. It is a collaborative environment where students can further develop their problem-solving skills with the help of facilitators. However, it does not count as Computer Science credit for the Computer Science BA, BS, or minor."}, {input: "Can you describe CSCI 2834?", output: "CSCI 2834 is the class code for Discrete Structures Workgroup. It is a course that offers additional problem-solving practice and guidance for students enrolled in CSCI 2824, providing them with an opportunity to enhance their problem-solving skills in a collaborative environment with the assistance of facilitators. It is a one-credit hour course."}, {input: "How many credit hours is Discrete Structures Workgroup worth?", output: "Discrete Structures Workgroup is worth 1 credit hour."}, {input: "Who teaches Discrete Structures Workgroup?", output: "The information about the specific instructors for Discrete Structures Workgroup is not available."}, {input: "What is the academic career for Discrete Structures Workgroup?", output: "Discrete Structures Workgroup is an undergraduate (UGRD) level course."}, {input: "Are there any restrictions for enrolling in Discrete Structures Workgroup?", output: "Yes, Discrete Structures Workgroup has a corequisite requirement. It requires students to be concurrently enrolled in CSCI 2824."}]
[{input: 'What is Computer Science 2: Data Structures?', output: 'Computer Science 2: Data Structures is a course that studies data abstractions such as stacks, queues, lists, trees, graphs, heaps, hash tables, and priority queues, along with their representation techniques. It also introduces concepts used in algorithm design and analysis. Knowledge of C++ is highly recommended for this course. The course is also known as CSPB 2270 and is equivalent to CSCI 2275. It does not grant degree credit.'},
{input: 'Can you describe CSCI 2270?', output: 'CSCI 2270, also known as Computer Science 2: Data Structures, is a course that focuses on studying data abstractions and their representation techniques. It covers topics such as stacks, queues, lists, trees, graphs, heaps, hash tables, and priority queues. The course also introduces concepts used in algorithm design and analysis, including criteria for selecting appropriate data structures for different applications. It is highly recommended to have knowledge of C++. CSCI 2270 does not grant degree credit and is equivalent to CSPB 2270.'},
{input: 'How many credit hours is Computer Science 2: Data Structures worth?', output: 'The number of credit hours for Computer Science 2: Data Structures may vary depending on the section. Therefore, it is best to check with the specific section or department for the exact credit hour value.'},
{input: 'Who teaches Computer Science 2: Data Structures?', output: 'Computer Science 2: Data Structures is taught by C. Godley and M. Zagrodzki.'},
{input: 'What is the academic career for Computer Science 2: Data Structures?', output: 'Computer Science 2: Data Structures is offered as an undergraduate level course (UGRD).'},
{input: 'Are there any restrictions for enrolling in Computer Science 2: Data Structures?', output: 'Yes, there are restrictions for enrolling in Computer Science 2: Data Structures. Students are required to have completed a prerequisite course of either CSCI 1300 or CSCI 1320 or ECEN 1310 with a minimum grade of C-, or ASEN 1320 with a minimum grade of B-. Additionally, students must have completed or be concurrently enrolled in a prerequisite or corequisite course of MATH 1300 or MATH 1310 or APPM 1345 or APPM 1350 with a minimum grade of C-.'}]
[{input: 'What is Computer Science 1: Starting Computing?', output: 'Computer Science 1: Starting Computing is a course that teaches techniques for writing computer programs in higher level programming languages to solve problems of interest in a range of application domains. It is designed for students with little to no experience in computing or programming.'}, 
{input: 'Can you describe CSCI 1300?', output: 'CSCI 1300 is a course that teaches techniques for writing computer programs in higher level programming languages. It is suitable for students with little or no experience in computing or programming. The course covers a range of topics and application domains to help students develop problem-solving skills using computer programs.'}, 
{input: 'How many credit hours is Computer Science 1: Starting Computing worth?', output: 'The number of credit hours for Computer Science 1: Starting Computing varies by section. It is best to check the course listing or consult with the academic advisor to determine the specific credit hours for the section you are interested in.'}, 
{input: 'Who teaches Computer Science 1: Starting Computing?', output: 'The instructors for Computer Science 1: Starting Computing may vary from section to section. It is best to check the course listing or consult with the department offering the course to find out the specific instructors for the section you are interested in.'}, 
{input: 'What is the academic career for Computer Science 1: Starting Computing?', output: 'Computer Science 1: Starting Computing is classified as an undergraduate (UGRD) course.'}, 
{input: 'Are there any restrictions for enrolling in Computer Science 1: Starting Computing?', output: 'Yes, there are restrictions for enrolling in Computer Science 1: Starting Computing. It requires a prerequisite or corequisite course of APPM 1235 or APPM 1340 or APPM 1345 or APPM 1350 or MATH 1150 or MATH 1300 or MATH 1310. A minimum grade of C- is required in any of these courses to fulfill the prerequisite or corequisite requirement.'}]
[{'input': 'What is Design and Analysis of Database Systems?', 'output': 'Design and Analysis of Database Systems is a course offered under the class code CSCI 3287. It is designed to introduce the fundamental concepts of database requirements analysis, database design, and database implementation, with a focus on the relational model and the SQL programming language. The course also covers the concepts of Big Data and NoSQL systems. It is equivalent to CSPB 3287.'}, {'input': 'Can you describe CSCI 3287?', 'output': 'CSCI 3287 is a course titled "Design and Analysis of Database Systems." It covers the fundamental concepts of database requirements analysis, database design, and database implementation. The course emphasizes the relational model and the SQL programming language. It also introduces the concepts of Big Data and NoSQL systems. The course is worth 3 credit hours.'}, {'input': 'How many credit hours is Design and Analysis of Database Systems worth?', 'output': 'Design and Analysis of Database Systems is worth 3 credit hours.'}, {'input': 'Who teaches Design and Analysis of Database Systems?', 'output': 'Design and Analysis of Database Systems is taught by instructor K. Nielsen.'}, {'input': 'What is the academic career for Design and Analysis of Database Systems?', 'output': 'Design and Analysis of Database Systems is offered for undergraduate students (UGRD) as part of their academic career.'}, {'input': 'Are there any restrictions for enrolling in Design and Analysis of Database Systems?', 'output': 'Yes, Design and Analysis of Database Systems has a prerequisite requirement. Students must have completed either CSCI 2270 or CSCI 2275 with a minimum grade of C- in order to enroll in the course.'}]
[{'input': 'What is Design and Analysis of Operating Systems?', 'output': 'Design and Analysis of Operating Systems is a course that analyzes the software that extends hardware to provide a computing environment. It covers topics such as the role of linkers, file systems, resource sharing, security, and networking. The course also studies the history of operating system organization and design and their influence on security, functionality, and reliability. It is a course that focuses on understanding the internals of operating systems and their design principles.'}, {'input': 'Can you describe CSCI 3753?', 'output': 'CSCI 3753, also known as Design and Analysis of Operating Systems, is a course that analyzes the software that extends hardware to provide a computing environment. It covers various topics such as linkers, file systems, resource sharing, security, and networking. The course examines the history of operating system organization and design and how they impact security, functionality, and reliability. It is an undergraduate level course.'}, {'input': 'How many credit hours is Design and Analysis of Operating Systems worth?', 'output': 'The number of credit hours for Design and Analysis of Operating Systems may vary depending on the section. Please refer to the course offerings or consult with the relevant department for the specific number of credit hours assigned to the course.'}, {'input': 'Who teaches Design and Analysis of Operating Systems?', 'output': 'The instructors for Design and Analysis of Operating Systems may vary from semester to semester. It is recommended to check the course listings or consult with the department offering the course to determine the current instructors.'}, {'input': 'What is the academic career for Design and Analysis of Operating Systems?', 'output': 'Design and Analysis of Operating Systems is offered for undergraduate students. It is categorized under the academic career of UGRD, which stands for undergraduate.'}, {'input': 'Are there any restrictions for enrolling in Design and Analysis of Operating Systems?', 'output': 'Yes, there are prerequisites for enrolling in Design and Analysis of Operating Systems. Students are required to have completed CSCI 2270 or CSCI 2275, as well as CSCI 2400 or ECEN 2360 or ECEN 3350 with a minimum grade of C-. These prerequisite courses must be successfully completed prior to enrolling in Design and Analysis of Operating Systems.'}]
[{input: "What is Cognitive Science?", output: "Cognitive Science is an interdisciplinary field that combines insights from psychology, philosophy, artificial intelligence, neuroscience, and linguistics. It focuses on understanding how the mind works, including processes such as perception, memory, learning, language, reasoning, and problem-solving. Cognitive scientists seek to uncover the underlying mechanisms that govern human cognition and apply this knowledge to fields such as education, artificial intelligence, human-computer interaction, and neuroscience research."}, 
{input: "Can you describe CSCI 3702?", output: "CSCI 3702, also known as Cognitive Science, is a course that introduces students to the field of cognitive science. The course draws from various disciplines, including psychology, philosophy, artificial intelligence, neuroscience, and linguistics. The topics covered in this course include the linguistic relativity hypothesis, consciousness, categorization, linguistic rules, the mind-body problem, nature versus nurture, conceptual structure and metaphor, logic/problem-solving, and judgment. The course also emphasizes the nature, implications, and limitations of the computational model of the mind."}, 
{input: "How many credit hours is Cognitive Science worth?", output: "Cognitive Science is worth 3 credit hours."}, 
{input: "Who teaches Cognitive Science?", output: "Cognitive Science is taught by R. Carston."}, 
{input: "What is the academic career for Cognitive Science?", output: "Cognitive Science is classified as an undergraduate (UGRD) level course."}, 
{input: "Are there any restrictions for enrolling in Cognitive Science?", output: "Yes, there are recommended prerequisites for enrolling in Cognitive Science. Students are encouraged to have completed two of the following courses: CSCI 1300, CSCI 2275, LING 2000, PHIL 2440, or PSYC 2145. Additionally, Cognitive Science is also known as LING 3005, PHIL 3310, PSYC 3005, SLHS 3003, and CSPB 3702."}]
[{input: 'What is Computer Graphics?', output: 'Computer Graphics is the study of design, analysis, and implementation of computer graphics techniques. It involves topics such as interactive techniques, 3D viewing and models, clipping, transformations, projection, removal of hidden surfaces, lighting, textures, and shadows. A basic knowledge of linear algebra is required for this field.'}, 
{input: 'Can you describe CSCI 4229?', output: 'CSCI 4229 is a course titled "Computer Graphics" which focuses on the design, analysis, and implementation of computer graphics techniques. The course covers various topics including interactive techniques, 3D viewing and models, clipping, transformations, projection, removal of hidden surfaces, lighting, textures, and shadows. It is a 3-credit hour course and is open to undergraduate students. The course requires a prerequisite of either CSCI 2270 or CSCI 2275 with a minimum grade of C-.'}, 
{input: 'How many credit hours is Computer Graphics worth?', output: 'Computer Graphics is worth 3 credit hours.'}, 
{input: 'Who teaches Computer Graphics?', output: 'Computer Graphics is taught by W. Schreuder.'}, 
{input: 'What is the academic career for Computer Graphics?', output: 'Computer Graphics is classified under the undergraduate academic career.'}, 
{input: 'Are there any restrictions for enrolling in Computer Graphics?', output: 'Yes, there are prerequisites for enrolling in Computer Graphics. Students must have completed either CSCI 2270 or CSCI 2275 with a minimum grade of C- to be eligible for this course.'}]
[{'input': 'What is History of Computing?', 'output': 'History of Computing is a course that explores the multifaceted histories of computing as punctuated by "great works" of computer science within the context of historical and social changes influencing and influenced by computing. The course covers the people, institutions, and innovations that have shaped the field of computing. It starts with the early mechanical calculation and mathematical frameworks such as Lovelace, Pascal, and Turing, and goes on to cover key historical events and developments in computer science. This course does not count as CS credit for the Computer Science BA, BS or minor.'}, {'input': 'Can you describe CSCI 4250?', 'output': 'CSCI 4250 is a course titled "History of Computing". It provides an in-depth exploration of the history of computing, including the key developments, innovations, and individuals that have shaped the field. The course covers topics such as early mechanical calculation, mathematical frameworks, early computers like ABC and ENIAC, military funding's role in computing, the founding and development of fields like artificial intelligence and the internet, and the interweaving of computing with other disciplines. The course is worth 3 credit hours and is taught by K. Nielsen. It is restricted to students with 57-180 credits (Juniors or Seniors) and students in the WCU/CU Partnership Program.'}, {'input': 'How many credit hours is History of Computing worth?', 'output': 'History of Computing is worth 3 credit hours.'}, {'input': 'Who teaches History of Computing?', 'output': 'History of Computing is taught by K. Nielsen.'}, {'input': 'What is the academic career for History of Computing?', 'output': 'The academic career for History of Computing is UGRD (undergraduate).'}, {'input': 'Are there any restrictions for enrolling in History of Computing?', 'output': 'Yes, there are restrictions for enrolling in History of Computing. It is restricted to students with 57-180 credits (Juniors or Seniors) and students in the WCU/CU Partnership Program.'}]
[{input: 'What is Concurrent Programming?', output: 'Concurrent programming is a programming paradigm that focuses on the development of programs that can execute multiple tasks simultaneously. It involves designing and implementing software systems where multiple independent computations or processes are executing concurrently and interacting with each other. The goal of concurrent programming is to make efficient use of available system resources, such as multicore processors, by dividing a program into smaller concurrent tasks that can be executed in parallel. This allows for improved performance, responsiveness, and utilization of modern hardware.'},
{input: 'Can you describe CSCI 4313?', output: 'CSCI 4313, also known as Concurrent Programming, is a course that introduces the theory and practice of multicore programming. The course is designed to provide students with a solid understanding of concurrent programming concepts and techniques. The first part of the course covers foundational topics such as mutual exclusion, wait-free and lock-free synchronization, spin locks, monitors, and memory consistency models. The second part of the course focuses on concurrent data structures and the different synchronization techniques used in their implementations, including coarse-grained, fine-grained, optimistic, and lock-free synchronization. The course is recommended for students who have completed the prerequisite course ECEN 3593. The course is worth 3 credit hours.'},
{input: 'How many credit hours is Concurrent Programming worth?', output: 'Concurrent Programming (CSCI 4313) is worth 3 credit hours.'},
{input: 'Who teaches Concurrent Programming?', output: 'Concurrent Programming (CSCI 4313) is taught by J. Izraelevitz.'},
{input: 'What is the academic career for Concurrent Programming?', output: 'Concurrent Programming (CSCI 4313) is an undergraduate (UGRD) level course.'},
{input: 'Are there any restrictions for enrolling in Concurrent Programming?', output: 'Yes, there is a prerequisite for enrolling in Concurrent Programming (CSCI 4313). Students must have successfully completed the course CSCI 2400 with a minimum grade of C-.'}]
[{input: 'What is Data Mining?', output: 'Data mining is a field of study that involves the process of discovering patterns, relationships, and insights from large-scale datasets. It involves using various techniques and algorithms to extract useful information from data, with the goal of making informed business decisions or predictions. Data mining involves tasks such as data preprocessing, data warehousing, association rule mining, classification, clustering, and mining specific types of data like time-series, social networks, multimedia, and web data.'},
{input: 'Can you describe CSCI 4502?', output: 'CSCI 4502, also known as Data Mining, is a course offered at the undergraduate level. It introduces students to the basic concepts and techniques of data mining. The course focuses on effectively and efficiently discovering interesting patterns hidden in large-scale datasets. Topics covered in the course include data preprocessing, data warehousing, association rule mining, classification, clustering, and mining specific types of data such as time-series, social networks, multimedia, and web data. The course is taught by Q. Lv.'},
{input: 'How many credit hours is Data Mining worth?', output: 'Data Mining is worth 3 credit hours.'},
{input: 'Who teaches Data Mining?', output: 'Data Mining is taught by Q. Lv.'},
{input: 'What is the academic career for Data Mining?', output: 'The academic career for Data Mining is UGRD, which indicates that it is an undergraduate course.'},
{input: 'Are there any restrictions for enrolling in Data Mining?', output: "Yes, there is a prerequisite course requirement for enrolling in Data Mining. Students must have completed either CSCI 2270 or CSCI 2275 with a minimum grade of C-."}]
[{input: "What is Object-Oriented Analysis and Design?", output: "Object-Oriented Analysis and Design is a class that focuses on the use of object-oriented techniques in software design and development. It covers topics such as domain modeling, use cases, architectural design, and modeling notations. Students apply these techniques in analysis and design projects."}, 
{input: "Can you describe CSCI 4448?", output: "CSCI 4448, also known as Object-Oriented Analysis and Design, is an applied analysis and design class that explores the use of object-oriented techniques in software development. It covers various aspects such as domain modeling, use cases, architectural design, and modeling notations. The class involves hands-on projects where students apply the learned techniques."},
{input: "How many credit hours is Object-Oriented Analysis and Design worth?", output: "Object-Oriented Analysis and Design is a 3-credit hour course."},
{input: "Who teaches Object-Oriented Analysis and Design?", output: "Object-Oriented Analysis and Design is taught by B. Wright and J. Jarzemsky."},
{input: "What is the academic career for Object-Oriented Analysis and Design?", output: "Object-Oriented Analysis and Design is a course offered for undergraduate academic career."},
{input: "Are there any restrictions for enrolling in Object-Oriented Analysis and Design?", output: "The restrictions for enrolling in Object-Oriented Analysis and Design may vary by section. It is advisable to check the specific section details for any enrollment restrictions."}]
[{input: 'What is Software Project Management and Mentoring?', output: 'Software Project Management and Mentoring is a course that focuses on the review of software project management and the discussion of the latest approaches, methodologies, and standards of software development. It aims to teach students how to develop software quality, documentation, testing, and prototype goals. The course also covers project risk management and cost estimation approaches. In addition, students in this course will have the opportunity to mentor other Senior Software Project Teams. This course is intended for students with professional software development experience and requires department consent. Students need to seek permission from the Senior Project Director to enroll.'},
{input: 'Can you describe CSCI 4328?', output: 'CSCI 4328, also known as Software Project Management and Mentoring, is a course that focuses on software project management and the latest approaches, methodologies, and standards in software development. The course covers various topics such as software quality, documentation, testing, prototype goals, project risk management, and cost estimation approaches. One unique aspect of this course is that students have the opportunity to mentor other Senior Software Project Teams. The course is designed for students who have professional software development experience. Department consent is required to enroll, and students need to seek permission from the Senior Project Director.'},
{input: 'How many credit hours is Software Project Management and Mentoring worth?', output: 'The number of credit hours for Software Project Management and Mentoring may vary depending on the section. The specific credit hours for the course are not provided in the available information. It is recommended to check the course listing or consult with the department or instructor for the exact number of credit hours for the given section.'},
{input: 'Who teaches Software Project Management and Mentoring?', output: 'Software Project Management and Mentoring is taught by A. Paradise. A. Paradise is the instructor for this course.'},
{input: 'What is the academic career for Software Project Management and Mentoring?', output: 'The academic career for Software Project Management and Mentoring is undergraduate (UGRD). This course is offered at the undergraduate level.'},
{input: 'Are there any restrictions for enrolling in Software Project Management and Mentoring?', output: 'Yes, there are restrictions for enrolling in Software Project Management and Mentoring. The course is restricted to students with 87-180 credits, specifically Senior and Fifth Year Senior Computer Science (CSEN) majors. Only students meeting these criteria are eligible to enroll in the course.'}]
[{input: "What is Varies by section?", output: "Varies by section refers to the fact that the content and topics covered in the course CSCI 4830 can change from semester to semester. Each section of the course may focus on different areas of computer science or explore different subjects of interest to senior undergraduate students."}, 
{input: "Can you describe CSCI 4830?", output: "CSCI 4830, also known as 'Varies by section,' is a course offered in the computer science department at the senior undergraduate level. The course covers topics of interest in computer science, and the specific content of the course varies from semester to semester. The course is designed to provide students with an opportunity to explore different areas of computer science based on their interests."},
{input: "How many credit hours is Varies by section worth?", output: "Varies by section, or CSCI 4830, is worth 3 credit hours."},
{input: "Who teaches Varies by section?", output: "The instructors who teach Varies by section, or CSCI 4830, may vary from semester to semester. However, some of the instructors who have taught the course in the past include A. Roncone, M. Rivera, A. Hamza, and A. Meyer."},
{input: "What is the academic career for Varies by section?", output: "Varies by section is offered as an undergraduate-level course (UGRD), specifically for senior undergraduate students."},
{input: "Are there any restrictions for enrolling in Varies by section?", output: "Yes, there are restrictions for enrolling in Varies by section. Students are required to have completed a prerequisite course of CSCI 2400 or ECEN 2360 or ECEN 3350 with a minimum grade of C- before they can enroll in CSCI 4830."}]
[{input: "What is Multidisciplinary Design Project 1?", output: "Multidisciplinary Design Project 1 is a course with the class code CSCI 4368. It is a senior capstone course that focuses on designing, developing, testing, and deploying software integrated into a mechanical system. Students work in multi-disciplinary teams, which may include students from computer science, mechanical, and electrical disciplines. The course aims to develop project management and communication skills specific to working in a multi-disciplinary team. It is the first semester of a year-long project, and students are required to take this course alongside CSCI 4378. Prerequisites for enrollment may vary based on the degree program, so it's advised to consult with an academic advisor for specific details."}, 
{input: "Can you describe CSCI 4368?", output: "CSCI 4368 is a course called Multidisciplinary Design Project 1. It is a senior capstone course that covers the design, development, testing, and deployment of software integrated into a mechanical system. The course emphasizes working in multi-disciplinary teams, including students from computer science, mechanical, and electrical disciplines. Students have the opportunity to enhance their project management and communication skills through participation in this course. It is the first semester of a year-long project, and it is mandatory to take this course along with CSCI 4378. Prerequisites for enrollment may vary for BS and BA degree programs, so students should reach out to their academic advisor for detailed information. BA students have the option to take these senior capstone courses."}, 
{input: "How many credit hours is Multidisciplinary Design Project 1 worth?", output: "The number of credit hours for Multidisciplinary Design Project 1 may vary depending on the section of the course offered. The specific credit hours for a particular section can be found in the course schedule or by consulting with the academic advisor."}, 
{input: "Who teaches Multidisciplinary Design Project 1?", output: "Multidisciplinary Design Project 1 is taught by various instructors. The instructors for this course may include Kotys/Steinbrenner, Steinbrenner/Kotys, and A. Paradise. The specific instructor(s) for a particular section can be confirmed through the course schedule or by contacting the department offering the course."}, 
{input: "What is the academic career for Multidisciplinary Design Project 1?", output: "Multidisciplinary Design Project 1 is an undergraduate course, indicated by the abbreviation UGRD. It is designed for senior students who are nearing the completion of their bachelor's degree program."}, 
{input: "Are there any restrictions for enrolling in Multidisciplinary Design Project 1?", output: "Yes, there are restrictions for enrolling in Multidisciplinary Design Project 1. It is restricted to students with 87-180 credits, specifically senior and fifth-year senior students. Additionally, it is limited to Computer Science (CSEN) majors only. Students from other disciplines may not be eligible to enroll in this course. It is advised to verify the exact restrictions and prerequisites by consulting with the academic advisor before registering for the course."}]
[{input: "What is High-Performance Scientific Computing?", output: "High-Performance Scientific Computing is a course that introduces computing systems, software, and methods used to solve large-scale problems in science and engineering. Students in this course will have the opportunity to work with high-performance workstations and a supercomputer."},
{input: "Can you describe CSCI 4576?", output: "CSCI 4576, also known as High-Performance Scientific Computing, is a course that focuses on computing systems, software, and methods used in solving large-scale scientific and engineering problems. The course utilizes high-performance workstations and a supercomputer for hands-on learning."},
{input: "How many credit hours is High-Performance Scientific Computing worth?", output: "The number of credit hours for High-Performance Scientific Computing may vary depending on the section. The exact credit hours can be found in the course schedule or by contacting the department offering the course."},
{input: "Who teaches High-Performance Scientific Computing?", output: "High-Performance Scientific Computing is taught by S. Runnels."},
{input: "What is the academic career for High-Performance Scientific Computing?", output: "The academic career for High-Performance Scientific Computing is undergraduate (UGRD)."},
{input: "Are there any restrictions for enrolling in High-Performance Scientific Computing?", output: "The recommended prerequisites for enrolling in High-Performance Scientific Computing are APPM 4600, APPM 4650, CSCI 3656, MATH 4650, or MCEN 3030. However, specific restrictions or prerequisites may vary by section. It is advisable to check the course details or consult with the department offering the course for the most accurate information."}]
[{input: 'What is Datacenter Scale Computing - Methods, Systems and Techniques?', output: 'Datacenter Scale Computing - Methods, Systems and Techniques is a course that covers the primary problem solving strategies, methods, and tools needed for data-intensive programs using large collections of computers typically called "warehouse scale" or "data-center scale" computers. It examines methods and algorithms for processing data-intensive applications, methods for deploying and managing large collections of computers in an on-demand infrastructure, and issues of large-scale computer system design.'},
{input: 'Can you describe CSCI 5253?', output: 'CSCI 5253, also known as Datacenter Scale Computing - Methods, Systems and Techniques, is a course that covers the primary problem solving strategies, methods, and tools needed for data-intensive programs using large collections of computers typically called "warehouse scale" or "data-center scale" computers. It examines methods and algorithms for processing data-intensive applications, methods for deploying and managing large collections of computers in an on-demand infrastructure, and issues of large-scale computer system design. The course is worth 3 credit hours and is taught by E. Keller. It is restricted to graduate students only.'},
{input: 'How many credit hours is Datacenter Scale Computing - Methods, Systems and Techniques worth?', output: 'Datacenter Scale Computing - Methods, Systems and Techniques is worth 3 credit hours.'},
{input: 'Who teaches Datacenter Scale Computing - Methods, Systems and Techniques?', output: 'Datacenter Scale Computing - Methods, Systems and Techniques is taught by E. Keller.'},
{input: 'What is the academic career for Datacenter Scale Computing - Methods, Systems and Techniques?', output: 'The academic career for Datacenter Scale Computing - Methods, Systems and Techniques is GRAD (graduate students).'},
{input: 'Are there any restrictions for enrolling in Datacenter Scale Computing - Methods, Systems and Techniques?', output: 'Yes, Datacenter Scale Computing - Methods, Systems and Techniques is restricted to graduate students only.'}]
[{input: "What is Convex Optimization and Its Applications?", output: "Convex Optimization and Its Applications is a course that covers basic convex analysis, optimization theory, optimization algorithms, applications, and advanced topics. It focuses on understanding and solving optimization problems with convex structures in various fields such as signal processing, control, communications, networks, statistics, machine learning, circuit design, and mechanical engineering."}, 
{input: "Can you describe CSCI 5254?", output: "CSCI 5254, also known as Convex Optimization and Its Applications, is a course that delves into the fundamentals of convex analysis and optimization. It covers topics such as convex sets, convex functions, and convex optimization problems. The course also explores optimization theory, including linear, quadratic, semidefinite, and geometric programming, as well as optimality conditions and duality theory. Additionally, it introduces various optimization algorithms such as descent methods and interior-point methods. The class discusses the application of convex optimization in diverse areas like signal processing, control, communications, networks, statistics, machine learning, circuit design, and mechanical engineering. It also touches upon advanced topics such as distributed decomposition, exact convex relaxation, and parsimonious recovery."}, 
{input: "How many credit hours is Convex Optimization and Its Applications worth?", output: "Convex Optimization and Its Applications is worth 3 credit hours."}, 
{input: "Who teaches Convex Optimization and Its Applications?", output: "Convex Optimization and Its Applications is taught by Professor L. Chen."}, 
{input: "What is the academic career for Convex Optimization and Its Applications?", output: "Convex Optimization and Its Applications is classified as a graduate-level course (GRAD)."}, 
{input: "Are there any restrictions for enrolling in Convex Optimization and Its Applications?", output: "Yes, Convex Optimization and Its Applications is restricted to graduate students only."}]
[{input: "What is Computer-Aided Verification?", 
output: "Computer-Aided Verification is a subject that involves the use of computer algorithms and tools to verify the correctness and reliability of hardware and software systems. It focuses on techniques such as formal methods, model checking, and theorem proving to analyze and validate the design of complex systems. The goal of computer-aided verification is to ensure that systems operate as intended and meet their specified requirements."},

{input: "Can you describe CSCI 5135?", 
output: "CSCI 5135 is a course offered at the graduate level that covers topics in Computer-Aided Verification. The course explores techniques and methodologies for verifying the correctness of hardware and software systems. It covers areas such as minimization, optimization, Boolean decomposition, state assignment, and silicon compilation. The course is recommended for students who have a strong background in discrete mathematics and programming. The instructor for this course is F. Somenzi."},

{input: "How many credit hours is Computer-Aided Verification worth?", 
output: "Computer-Aided Verification is worth 3 credit hours."},

{input: "Who teaches Computer-Aided Verification?", 
output: "Computer-Aided Verification is taught by F. Somenzi."},

{input: "What is the academic career for Computer-Aided Verification?", 
output: "Computer-Aided Verification falls under the GRAD (Graduate) academic career."},

{input: "Are there any restrictions for enrolling in Computer-Aided Verification?", 
output: "Yes, Computer-Aided Verification is restricted to graduate students only."}]
[{input: "What is Fundamentals of System Administration and Virtualization?", output: "Fundamentals of System Administration and Virtualization is a course that introduces the basic use and administration of Unix and Linux systems. Topics covered include booting and system management, scripting, storage and logical volume management, filesystem configuration, account management and password security, process control, software installation, event logging, and system auditing. Students will also develop familiarity with virtualization platforms such as VirtualBox and VMware to implement and test their system configurations."}, 
{input: "Can you describe CSCI 5030?", output: "CSCI 5030, also known as Fundamentals of System Administration and Virtualization, is a course that introduces the basic use and administration of Unix and Linux systems. Topics covered include booting and system management, scripting, storage and logical volume management, filesystem configuration, account management and password security, process control, software installation, event logging, and system auditing. The course also covers virtualization platforms such as VirtualBox and VMware. It is a 3-credit hour course offered in the GRAD academic career."},
{input: "How many credit hours is Fundamentals of System Administration and Virtualization worth?", output: "Fundamentals of System Administration and Virtualization is worth 3 credit hours."},
{input: "Who teaches Fundamentals of System Administration and Virtualization?", output: "Fundamentals of System Administration and Virtualization is taught by W. Schreuder."},
{input: "What is the academic career for Fundamentals of System Administration and Virtualization?", output: "The academic career for Fundamentals of System Administration and Virtualization is GRAD."},
{input: "Are there any restrictions for enrolling in Fundamentals of System Administration and Virtualization?", output: "Yes, Fundamentals of System Administration and Virtualization is restricted to Computer Science Network Engineering MS Majors."}]
[{input: "What is Network Systems?", output: "Network Systems is a course focused on the design and implementation of network programs and systems. It covers topics in network protocols, architectures, client-server computing, software-driven networking, and other contemporary network hardware-software system design and programming techniques. The course requires familiarity with C and Unix."}, 
{input: "Can you describe CSCI 5273?", output: "CSCI 5273, also known as Network Systems, is a course that focuses on the design and implementation of network programs and systems. It covers various topics such as network protocols, architectures, client-server computing, software-driven networking, and contemporary network hardware-software system design and programming techniques. The course is recommended for students who have taken CSCI 4273 and CSCI 4573. It is worth 3 credit hours and is taught by S. Ha. The course is restricted to graduate students only."}, 
{input: "How many credit hours is Network Systems worth?", output: "Network Systems is worth 3 credit hours."}, 
{input: "Who teaches Network Systems?", output: "Network Systems is taught by S. Ha."}, 
{input: "What is the academic career for Network Systems?", output: "The academic career for Network Systems is GRAD (graduate)."}, 
{input: "Are there any restrictions for enrolling in Network Systems?", output: "Yes, there are restrictions for enrolling in Network Systems. The course is restricted to graduate students only."}]
[{'input': 'What is Startup Essentials: Entrepreneurial Projects in Computing?', 'output': 'Startup Essentials: Entrepreneurial Projects in Computing is a course with the class code CSCI 5340. It is designed to provide students with the necessary tools to be successful technical co-founders of their own startups. The course focuses on the initial stages of founding a startup, including team formation, idea validation, pivoting and pitching. It follows an iterative methodology and emphasizes the development of a minimum viable product. Students will also be evaluated on the product/market fit of their startup concept. The course covers CS coding concepts relevant for startups, such as cloud programming, mobile programming, and agile software engineering. It is worth 3 credit hours and is not eligible for degree credit. The instructor for this course is D. Brown. It is open to graduate students only.'}, {'input': 'Can you describe CSCI 5340?', 'output': 'Startup Essentials: Entrepreneurial Projects in Computing, also known as CSCI 5340, is a course that helps students become successful technical co-founders of startups. It covers topics such as team formation, idea validation, pivoting, and pitching using an iterative methodology. Students will learn about developing a minimum viable product and pitching their startup concept. The course also teaches relevant CS coding concepts such as cloud programming, mobile programming, and agile software engineering. It is a 3-credit hour course taught by instructor D. Brown. Only graduate students can enroll in this course.'}, {'input': 'How many credit hours is Startup Essentials: Entrepr...
[{'input': 'What is Designing for Defense 1?', 'output': 'Designing for Defense 1 is a class titled "Designing for Defense" or "Hacking for Defense." It is a national service program offered at leading research universities across the country. The class focuses on interdisciplinary teams working on real-world national security challenges in close contact with national security agencies. The teams use the Lean Launchpad entrepreneurship methodology to develop engineering and business concepts to solve real-world challenges for special operations forces, the intelligence community, and other government agencies. Winning teams have the opportunity to receive real-world capital investment. It is the first semester of a two-course sequence and is taken in conjunction with ASEN/CSCI/CYBR 5550 and ASEN/CSCI/CYBR 5580.'}, {'input': 'Can you describe CSCI 5550?', 'output': 'CSCI 5550 is a class titled "Designing for Defense 1" or "Hacking for Defense." It is part of a national service program that operates at leading research universities in the United States. The class focuses on interdisciplinary teams that are chosen through a competitive selection process. These teams work on real-world national security challenges in collaboration with national security agencies. The class leverages the Lean Launchpad entrepreneurship methodology to develop engineering and business concepts to solve these challenges for special operations forces, the intelligence community, and other government agencies. Successful teams may receive real-world capital investment. CSCI 5550 is the first semester of a two-course sequence, with the second semester being ASEN/CSCI/CYBR 5580. The academic year is spanned by taking these courses contiguously.'}, {'input': 'How many credit hours is Designing for Defense 1 worth?', 'output': 'Designing for Defense 1 is worth 3 credit hours.'}, {'input': 'Who teaches Designing for Defense 1?', 'output': 'Designing for Defense 1 is taught by A. Meyer.'}, {'input': 'What is the academic career for Designing for Defense 1?', 'output': 'Designing for Defense 1 is a graduate-level class.'}, {'input': 'Are there any restrictions for enrolling in Designing for Defense 1?', 'output': 'Yes, Designing for Defense 1 is restricted to graduate students only.'}]
[{'input': 'What is Database Systems?', 'output': 'Database Systems is a class with the course code CSCI 5817. It provides an advanced treatment of basic database concepts. The class is recommended as a prerequisite for CSCI 3753. It is a graduate-level class and is worth 3 credit hours. The class instructors are not specified. It is restricted to graduate students only.'},
{'input': 'Can you describe CSCI 5817?', 'output': 'CSCI 5817 is a class titled "Database Systems." It offers an advanced treatment of basic database concepts. It is designed for graduate students and is worth 3 credit hours. The class is recommended as a prerequisite for CSCI 3753. The class instructors are not specified. It provides a comprehensive understanding of database systems.'},
{'input': 'How many credit hours is Database Systems worth?', 'output': 'Database Systems is worth 3 credit hours.'},
{'input': 'Who teaches Database Systems?', 'output': 'The class instructors for Database Systems are not specified.'},
{'input': 'What is the academic career for Database Systems?', 'output': 'Database Systems is categorized as a graduate-level class.'},
{'input': 'Are there any restrictions for enrolling in Database Systems?', 'output': 'Yes, Database Systems has a restriction. It is limited to graduate students only.'}]
[{'input': 'What is Theoretical Foundations of Autonomous Systems?', 'output': 'Theoretical Foundations of Autonomous Systems is a course with the class code CSCI 5854. It covers techniques for modeling, design, and verification of autonomous systems and application domains such as automotive systems, robotics, and medical devices. The course explores topics like timed systems, differential equations, switched systems, and hybrid dynamical systems in terms of modeling. It also covers verification topics including reachability and stability verification, temporal specifications, and synthesis of controllers. The course is applicable to fields like automotive systems and medical devices.'}, {'input': 'Can you describe CSCI 5854?', 'output': 'CSCI 5854 is a course called Theoretical Foundations of Autonomous Systems. It covers techniques for modeling, design, and verification of autonomous systems and application domains including automotive systems, robotics, and medical de...
[{input: "What is Introduction to Virtual Reality?", output: "Introduction to Virtual Reality is a course that introduces students to the field of virtual reality (VR). It covers the historical development of virtual reality technologies and virtual reality as a research field, the mathematics of 3D coordinate systems, fundamental principles, algorithms, and design patterns in developing interactive virtual environments, the perceptual science behind mixed reality technologies, and libraries and tools for creating VR experiences. It was previously offered as a special topics course. Recommended prerequisite for this course is CSCI 2270 or CSCI 2275 (minimum grade B). Same as CSCI 4616, ATLS 4616, ATLS 5616."}, 
{input: "Can you describe CSCI 5616?", output: "CSCI 5616 is a course titled Introduction to Virtual Reality. It covers various aspects of virtual reality, including its historical development, mathematical foundations, algorithms for developing interactive virtual environments, perceptual science behind mixed reality technologies, and tools for creating VR experiences. It is recommended to have a prerequisite of CSCI 2270 or CSCI 2275 with a minimum grade of B. The course is also offered as CSCI 4616, ATLS 4616, and ATLS 5616."},
{input: "How many credit hours is Introduction to Virtual Reality worth?", output: "Introduction to Virtual Reality is worth 3 credit hours."},
{input: "Who teaches Introduction to Virtual Reality?", output: "Introduction to Virtual Reality is taught by P. Gyory."},
{input: "What is the academic career for Introduction to Virtual Reality?", output: "The academic career for Introduction to Virtual Reality is GRAD (graduate)."},
{input: "Are there any restrictions for enrolling in Introduction to Virtual Reality?", output: "Yes, there are restrictions for enrolling in Introduction to Virtual Reality. It is restricted to graduate students only."}]
[{input: "What is Computer Vision?", output: "Computer Vision is a field of study that focuses on developing algorithms and techniques to enable computers to extract information and understand the content of digital images or videos. It involves the analysis, interpretation, and understanding of visual data to make decisions or perform tasks."},
{input: "Can you describe CSCI 5722?", output: "CSCI 5722 is a course titled 'Computer Vision'. It explores various algorithms that can extract information about the world from images or sequences of images. The topics covered in this course include imaging models and camera calibration, early vision (filters, edges, texture, stereo, optical flow), mid-level vision (segmentation, tracking), vision-based control, and object recognition. In terms of prerequisites, it is recommended to have a background in probability, multivariate calculus, and linear algebra. The course is also known as CSCI 4722."},
{input: "How many credit hours is Computer Vision worth?", output: "Computer Vision is worth 3 credit hours."},
{input: "Who teaches Computer Vision?", output: "Computer Vision is taught by Professor P. Yeh."},
{input: "What is the academic career for Computer Vision?", output: "Computer Vision is classified as a graduate-level course (GRAD)."},
{input: "Are there any restrictions for enrolling in Computer Vision?", output: "Yes, there is a restriction for enrolling in Computer Vision. It is restricted to graduate students only."}]
[{'input': 'What is High-Performance Scientific Computing?', 'output': 'High-Performance Scientific Computing is a course that introduces computing systems, software, and methods used to solve large-scale problems in science and engineering. It is designed to provide students with hands-on experience using high-performance workstations and a supercomputer. The course is typically offered as a two-semester sequence and is also known as CSCI 4576.'},
{'input': 'Can you describe CSCI 5576?', 'output': 'CSCI 5576 is a course titled "High-Performance Scientific Computing." It is a part of the curriculum that focuses on teaching students about computing systems, software, and methods used in solving large-scale problems in science and engineering. The course provides practical experience in using high-performance workstations and a supercomputer. It is open to graduate students and is the first course in a two-semester sequence, also known as CSCI 4576.'},
{'input': 'How many credit hours is High-Performance Scientific Computing worth?', 'output': 'The number of credit hours for High-Performance Scientific Computing may vary depending on the section and the institution offering the course. The exact number of credit hours can be determined by checking the course catalog or contacting the relevant department at the respective university.'},
{'input': 'Who teaches High-Performance Scientific Computing?', 'output': 'High-Performance Scientific Computing is typically taught by S. Runnels. However, it is always advisable to check the course schedule or contact the department offering the course for the most up-to-date information on the instructors.'},
{'input': 'What is the academic career for High-Performance Scientific Computing?', 'output': 'The academic career for High-Performance Scientific Computing is GRAD, which stands for graduate students. This course is specifically designed for graduate-level students who have already completed their undergraduate studies and are pursuing advanced degrees.'},
{'input': 'Are there any restrictions for enrolling in High-Performance Scientific Computing?', 'output': 'Yes, there are restrictions for enrolling in High-Performance Scientific Computing. It is restricted to graduate students only. This means that only students who are pursuing an advanced degree, such as a master's or a Ph.D., can enroll in this course. Undergraduate students may not be eligible to enroll in this course unless they have special permission from the instructor or department.'}]
[{input: 'What is Advanced Data Structures?', output: 'Advanced Data Structures is a course offered under the class code CSCI 6254. It is an advanced-level course that covers data structures beyond trees, heaps, and hashtables. The course focuses on topics such as hashtables and their applications, amortized analysis and data structures using amortization, important balanced tree data structures including B-trees, treaps and skip lists, mergeable heaps: binomial and Fibonacci heaps, persistent data structures, tries, suffix tries, suffix automata, and spatial data structures. The recommended prerequisite for this course is CSCI 5434.'},
{input: 'Can you describe CSCI 6254?', output: 'CSCI 6254, also known as Advanced Data Structures, is a course that delves deeper into data structures beyond what is covered in introductory classes on algorithms and data structures. The course explores various topics such as hashtables and their applications, amortized analysis and data structures using amortization, balanced tree data structures (B-trees, treaps, skip lists), mergeable heaps (binomial and Fibonacci heaps), persistent data structures, tries, suffix tries, suffix automata, and spatial data structures. The course is part of the graduate academic career and is taught by S. Sankaranarayanan.'},
{input: 'How many credit hours is Advanced Data Structures worth?', output: 'Advanced Data Structures is worth 3 credit hours.'},
{input: 'Who teaches Advanced Data Structures?', output: 'Advanced Data Structures is taught by S. Sankaranarayanan.'},
{input: 'What is the academic career for Advanced Data Structures?', output: 'Advanced Data Structures is part of the graduate academic career.'},
{input: 'Are there any restrictions for enrolling in Advanced Data Structures?', output: 'Yes, there is a prerequisite course requirement for Advanced Data Structures. Students must have completed CSCI 5454 with a minimum grade of B in order to enroll in this course.'}]
[{input: "What is Linear Algebra with Computer Science Applications?", output: "Linear Algebra with Computer Science Applications is a course that introduces the fundamentals of linear algebra in the context of computer science applications. It covers topics such as vector spaces, matrices, linear systems, and eigenvalues. The course also includes the basics of floating point computation and numerical linear algebra. It is equivalent to CSPB 2820."}, 
{input: "Can you describe CSCI 2820?", output: "CSCI 2820, also known as Linear Algebra with Computer Science Applications, is a course that combines the principles of linear algebra with practical applications in computer science. It provides students with a solid foundation in vector spaces, matrices, linear systems, and eigenvalues. The course also covers topics related to floating point computation and numerical linear algebra. It is designed to help students understand the mathematical concepts underlying computer science algorithms and applications."},
{input: "How many credit hours is Linear Algebra with Computer Science Applications worth?", output: "Linear Algebra with Computer Science Applications is worth 3 credit hours."}, 
{input: "Who teaches Linear Algebra with Computer Science Applications?", output: "Linear Algebra with Computer Science Applications is taught by D. Vernerey and R. Cohen."}, 
{input: "What is the academic career for Linear Algebra with Computer Science Applications?", output: "Linear Algebra with Computer Science Applications is offered for undergraduate students (UGRD)."},
{input: "Are there any restrictions such as prerequisites for enrolling in Linear Algebra with Computer Science Applications?", output: "The class information states that restrictions may vary by section. It is recommended to check the specific prerequisites or restrictions listed for the desired section of Linear Algebra with Computer Science Applications."}]
[{input: 'What is Introduction to Computational Thinking?', output: 'Introduction to Computational Thinking is a course that teaches computational thinking and techniques for writing computer programs using the Python programming language. It is intended for students who realize that computational skills are beneficial to all fields of study, but who have little or no experience in programming or are not Computer Science majors. Students will be expected to create computer programs to solve problems in a range of disciplines. It does not count as Computer Science credit for the Computer Science BA, BS, or minor. Degree credit is not granted for this course and it cannot be used to fulfill the requirements for LING 1200 or INFO 1701.'},
{input: 'Can you describe CSCI 1200?', output: 'CSCI 1200 is the course code for Introduction to Computational Thinking. It teaches computational thinking and techniques for writing computer programs using Python. The course is designed for students with little or no experience in programming and who are not Computer Science majors. Students will learn to create computer programs to solve problems in various disciplines. It cannot be used for Computer Science credit in the Computer Science BA, BS, or minor programs.'},
{input: 'How many credit hours is Introduction to Computational Thinking worth?', output: 'The number of credit hours for Introduction to Computational Thinking varies by section.'},
{input: 'Who teaches Introduction to Computational Thinking?', output: 'The instructors for Introduction to Computational Thinking may vary depending on the section and semester. Please check the course listings or consult the department for the most up-to-date information on the instructors for the course.'},
{input: 'What is the academic career for Introduction to Computational Thinking?', output: 'The academic career for Introduction to Computational Thinking is UGRD, which indicates that it is an undergraduate course.'},
{input: 'Are there any restrictions such as prerequisites for enrolling in Introduction to Computational Thinking?', output: 'The provided information does not mention any specific restrictions or prerequisites for enrolling in Introduction to Computational Thinking. It is advisable to check the course listings or consult the department for any additional requirements or restrictions.'}]
[{'input': 'What is Universal Design for Digital Media?', 'output': 'Universal Design for Digital Media is a course that focuses on the concepts of universal design and web standards. It addresses issues at the intersection of web standards, universal design, and the needs of persons with disabilities. The goal of the course is to teach students how to create media and websites that are accessible, usable, and effective for all users and device platforms. It is recommended for students to have some knowledge of creating web pages with HTML coding or web design software. The course is also known as ATLS 3150.'}, {'input': 'Can you describe CSCI 3150?', 'output': 'CSCI 3150, also known as Universal Design for Digital Media, is a course that focuses on the concepts of universal design and web standards. It addresses issues at the nexus of web standards, universal design, and the needs of persons with disabilities. Students learn how to create media and web sites that are accessible, usable, and effective for all users and device platforms. The course is recommended for students who have some knowledge of creating web pages with either direct HTML coding or web design software. The course is taught by D. Schaal and H. Kramer.'}, {'input': 'How many credit hours is Universal Design for Digital Media worth?', 'output': 'Universal Design for Digital Media is worth 3 credit hours.'}, {'input': 'Who teaches Universal Design for Digital Media?', 'output': 'Universal Design for Digital Media is taught by D. Schaal and H. Kramer.'}, {'input': 'What is the academic career for Universal Design for Digital Media?', 'output': 'The academic career for Universal Design for Digital Media is UGRD, which stands for undergraduate.'}, {'input': 'Are there any restrictions such as prerequisites for enrolling in Universal Design for Digital Media?', 'output': 'Yes, there is a prerequisite for enrolling in Universal Design for Digital Media. The course requires a minimum grade of C- in the prerequisite course CSCI 1300.'}]
[{input: "What is Computer Graphics?", output: "Computer Graphics is a field of study that focuses on the design, analysis, and implementation of techniques for creating and manipulating visual images using computers. It involves the use of algorithms and data structures to generate and render images, as well as techniques for modeling, animating, and interacting with 3D objects and environments. Computer Graphics is used in various applications such as video games, virtual reality, computer-aided design (CAD), scientific visualization, and film production."}, 
{input: "Can you describe CSCI 4229?", output: "CSCI 4229 is a course with the title 'Computer Graphics'. It is a class that delves into the design, analysis, and implementation of computer graphics techniques. The course covers topics such as interactive techniques, 3D viewing and models, clipping, transformations, projection, removal of hidden surfaces, lighting, textures, and shadows. It requires a basic understanding of linear algebra. CSCI 4229 is equivalent to CSCI 5229."}, 
{input: "How many credit hours is Computer Graphics worth?", output: "Computer Graphics is worth 3 credit hours."}, 
{input: "Who teaches Computer Graphics?", output: "Computer Graphics is taught by W. Schreuder."}, 
{input: "What is the academic career for Computer Graphics?", output: "Computer Graphics is an undergraduate (UGRD) course."}, 
{input: "Are there any restrictions such as prerequisites for enrolling in Computer Graphics?", output: "Yes, there is a prerequisite for enrolling in Computer Graphics. It requires a minimum grade of C- in either CSCI 2270 or CSCI 2275."}]
[{input: "What is Linux System Administration?", output: "Linux System Administration is a course that introduces Linux Unix system administration and related topics. It covers hardware and software installation, storage management, configuration of user accounts and system services, development of automation and monitoring tools, and the provisioning of common network services. The course also focuses on network security concerns of Internet connected hosts and involves building and maintaining a network of Linux servers using provided computing resources."},
{input: "Can you describe CSCI 4113?", output: "CSCI 4113, also known as Linux System Administration, is a course that introduces Linux Unix system administration and related topics. It is a laboratory-focused course that provides significant exposure to the network security concerns of Internet connected hosts. Students in this course will build a network of Linux servers from the ground up using provided computing resources and are responsible for maintaining and securing these servers themselves. The course is worth 3 credit hours."},
{input: "How many credit hours is Linux System Administration worth?", output: "Linux System Administration is worth 3 credit hours."},
{input: "Who teaches Linux System Administration?", output: "Linux System Administration is taught by W. Schreuder."},
{input: "What is the academic career for Linux System Administration?", output: "The academic career for Linux System Administration is UGRD (Undergraduate)."},
{input: "Are there any restrictions such as prerequisites for enrolling in Linux System Administration?", output: "Yes, Linux System Administration requires a prerequisite course of CSCI 3753 with a minimum grade of C-."}]
[{input: 'What is Introduction to Wireless Systems?', output: 'Introduction to Wireless Systems is a course that provides an overview of the distinctive characteristics of the wireless communications medium. It covers various topics such as analog signals, antennas and propagation, digital signals, sampling, quadrature signals, digital modulation, SNR and SINR concepts, channel models, channel statistics, link budgets, MIMO, and beam-forming. The course also introduces Software Defined Radio (SDR) for hands-on learning of radio operation. It is recommended to have familiarity with basic programming, statistics, and computer networking concepts.'},
{input: 'Can you describe CSCI 4200?', output: 'CSCI 4200, also known as Introduction to Wireless Systems, is a course that provides an overview of wireless communications. It covers topics such as analog and digital signals, antennas and propagation, digital modulation, channel models, link budgets, and more. The course also includes an introduction to MIMO (Multiple-Input Multiple-Output) and beam-forming, as well as hands-on learning of radio operation using Software Defined Radio (SDR). It is recommended to have familiarity with basic programming, statistics, and computer networking concepts.'},
{input: 'How many credit hours is Introduction to Wireless Systems worth?', output: 'The credit hours for Introduction to Wireless Systems may vary depending on the section. The exact number of credit hours can be found in the course schedule or by contacting the academic department offering the course.'},
{input: 'Who teaches Introduction to Wireless Systems?', output: 'Introduction to Wireless Systems is taught by M. Lofquist.'},
{input: 'What is the academic career for Introduction to Wireless Systems?', output: 'Introduction to Wireless Systems is classified under the UGRD (Undergraduate) academic career.'},
{input: 'Are there any restrictions such as prerequisites for enrolling in Introduction to Wireless Systems?', output: 'Yes, there are prerequisites and restrictions for enrolling in Introduction to Wireless Systems. The prerequisites include CSCI 2400 or ECEN 2360 or ECEN 3350, and APPM 3570 or CHEN 3010 or CSCI 3022 or CVEN 3227 or ECEN 3810 or ECON 3818 or MATH 3510 or MATH 4510 or MCEN 3047 or STAT 3100 or STAT 4000 or STAT 4520. Additionally, PHYS 1120 with a minimum grade of C- is also required. Please note that these prerequisites must be fulfilled in order to enroll in the course.'}]
[{input: "What is Concurrent Programming?", output: "Concurrent programming is a programming paradigm that deals with the execution of multiple tasks or processes simultaneously. It involves designing and implementing programs that can run multiple threads or processes concurrently, allowing for efficient utilization of resources and improved performance. Concurrent programming requires synchronization mechanisms to handle shared resources and ensure proper coordination between concurrent tasks."}, 
{input: "Can you describe CSCI 4313?", output: "CSCI 4313, also known as Concurrent Programming, is a course that introduces the theory and practice of multicore programming. It covers the foundations of concurrent programming, including topics such as mutual exclusion, wait-free and lock-free synchronization, spin locks, monitors, and memory consistency models. The course also focuses on concurrent data structures and various synchronization techniques used in their implementations, such as coarse-grained, fine-grained, optimistic, and lock-free synchronization. The recommended prerequisite for this course is ECEN 3593. It is offered under multiple course codes: ECEN 4313, ECEN 5313, and CSCI 5313."}, 
{input: "How many credit hours is Concurrent Programming worth?", output: "Concurrent Programming is worth 3 credit hours."}, 
{input: "Who teaches Concurrent Programming?", output: "Concurrent Programming is taught by J. Izraelevitz."}, 
{input: "What is the academic career for Concurrent Programming?", output: "Concurrent Programming is offered as an undergraduate (UGRD) course."}, 
{input: "Are there any restrictions such as prerequisites for enrolling in Concurrent Programming?", output: "Yes, there is a prerequisite for enrolling in Concurrent Programming. It requires a minimum grade of C- in the course CSCI 2400."}]
[{'input': 'What is Fundamentals of Network Programming?', 'output': 'Fundamentals of Network Programming is a course that provides an immersion into the foundation theories of network programming and software development for emerging technologies. Students will gain direct experience with real-world programming lab experiments and demonstrations that relate to the prolific increase of cross-discipline programming. The course is also known as CYBR 5020.'}, {'input': 'Can you describe CSCI 5020?', 'output': 'CSCI 5020, also known as Fund...
[{'input': 'What is Software Project Management and Mentoring?', 'output': 'Software Project Management and Mentoring is a course that focuses on reviewing software project management and discussing the latest approaches, methodologies, and standards of software development. The course aims to teach students how to develop software quality, documentation, testing, and prototype goals. It also covers project risk management and cost estimation approaches. One unique aspect of this course is that students are involved in mentoring other Senior Software Project Teams. This course is intended for students with professional software development experience and requires department consent to enroll.'}, {'input': 'Can you describe CSCI 4328?', 'output': 'CSCI 4328 is a course titled "Software Project Management and Mentoring." It is a course that reviews software project management and discusses the latest approaches, methodologies, and standards of software development. The course focuses on developing software quality, documentation, testing, and prototype goals. It also covers project risk management and cost estimation approaches. One notable aspect of this course is that students are involved in mentoring other Senior Software Project Teams. The course is designed for students with professional software development experience and is open to undergraduate students. The course is taught by A. Paradise.'}, {'input': 'How many credit hours is Software Project Management and Mentoring worth?', 'output': 'The number of credit hours for Software Project Management and Mentoring may vary depending on the section. The specific credit hours for the course can be determined by checking the course listing or by consulting the Senior Project Director or the department offering the course.'}, {'input': 'Who teaches Software Project Management and Mentoring?', 'output': 'Software Project Management and Mentoring is taught by A. Paradise.'}, {'input': 'What is the academic career for Software Project Management and Mentoring?', 'output': 'The academic career for Software Project Management and Mentoring is undergraduate (UGRD).'}, {'input': 'Are there any restrictions such as prerequisites for enrolling in Software Project Management and Mentoring?', 'output': 'Yes, there are restrictions for enrolling in Software Project Management and Mentoring. The course is restricted to students with 87-180 credits (Senior, Fifth Year Senior) Computer Science (CSEN) majors only. This means that only students who have completed a significant number of credits and are majoring in Computer Science are eligible to enroll in this course. Additionally, department consent is required, so students need to seek permission from the Senior Project Director to enroll.'}]
[{'input': 'What is Convex Optimization and Its Applications?', 'output': 'Convex Optimization and Its Applications is a course offered under the code CSCI 5254. It discusses basic convex analysis, optimization theory, optimization algorithms, and various applications of convex optimization. The course covers topics such as convex sets, functions, optimization problems, optimality conditions, duality theory, descent methods, interior-point methods, and applications in various fields such as signal processing, control, communications, networks, statistics, machine learning, circuit design, and mechanical engineering.'}, {'input': 'Can you describe CSCI 5254?', 'output': 'CSCI 5254 is the class code for Convex Optimization and Its Applications. It is a course that focuses on convex optimization and its practical applications. The course covers topics such as convex analysis, optimization theory, optimization algorithms, and various applications in different domains. The course is designed for graduate students and is worth 3 credit hours.'}, {'input': 'How many credit hours is Convex Optimization and Its Applications worth?', 'output': 'Convex Optimization and Its Applications is worth 3 credit hours.'}, {'input': 'Who teaches Convex Optimization and Its Applications?', 'output': 'Convex Optimization and Its Applications is taught by L. Chen.'}, {'input': 'What is the academic career for Convex Optimization and Its Applications?', 'output': 'Convex Optimization and Its Applications is offered as a graduate-level course.'}, {'input': 'Are there any restrictions such as prerequisites for enrolling in Convex Optimization and Its Applications?', 'output': 'Yes, Convex Optimization and Its Applications is restricted to graduate students only.'}]
[{input: "What is High-Performance Scientific Computing?", output: "High-Performance Scientific Computing is a course that introduces computing systems, software, and methods used to solve large-scale problems in science and engineering. Students in this course gain hands-on experience using high-performance workstations and a supercomputer."}, 
{input: "Can you describe CSCI 4576?", output: "CSCI 4576, also known as High-Performance Scientific Computing, is a course that focuses on computing systems, software, and methods used for solving large-scale problems in science and engineering. It provides students with practical experience in utilizing high-performance workstations and a supercomputer to tackle real-world computational challenges."},
{input: "How many credit hours is High-Performance Scientific Computing worth?", output: "The number of credit hours for High-Performance Scientific Computing may vary depending on the section. Please check the specific section of the course for the exact credit hours."},
{input: "Who teaches High-Performance Scientific Computing?", output: "High-Performance Scientific Computing is taught by S. Runnels. S. Runnels is the instructor for this course."},
{input: "What is the academic career for High-Performance Scientific Computing?", output: "High-Performance Scientific Computing is an undergraduate course. It is offered as part of the undergraduate academic career."},
{input: "Are there any restrictions such as prerequisites for enrolling in High-Performance Scientific Computing?", output: "Yes, there are recommended prerequisites for enrolling in High-Performance Scientific Computing. It is recommended to have taken APPM 4600, APPM 4650, CSCI 3656, MATH 4650, or MCEN 3030 before taking this course. These courses provide a foundation that is beneficial for understanding the material covered in High-Performance Scientific Computing."}
]
[{'input': 'What is Fundamentals of System Administration and Virtualization?', 'output': 'Fundamentals of System Administration and Virtualization is a course offered under the code CSCI 5030. It is an introductory course that focuses on the basic use and administration of Unix and Linux systems. The course covers various topics such as booting and system management, scripting, storage and logical volume management, filesystem configuration, account management and password security, process control, software installation, event logging, and system auditing. In addition to system administration, students will also gain familiarity with virtualization platforms like VirtualBox and VMware to implement and test system configurations. The course is equivalent to CYBR 5030.'},
{'input': 'Can you describe CSCI 5030?', 'output': 'CSCI 5030 is the course code for Fundamentals of System Administration and Virtualization. It is a course that introduces students to the basics of Unix and Linux system administration. The course covers topics such as booting and system management, scripting, storage and logical volume management, filesystem configuration, account management and password security, process control, software installation, event logging, and system auditing. Students will also have hands-on experience with virtualization platforms like VirtualBox and VMware to implement and test system configurations. The course is also offered as CYBR 5030.'},
{'input': 'How many credit hours is Fundamentals of System Administration and Virtualization worth?', 'output': 'Fundamentals of System Administration and Virtualization is worth 3 credit hours.'},
{'input': 'Who teaches Fundamentals of System Administration and Virtualization?', 'output': 'The course Fundamentals of System Administration and Virtualization is taught by W. Schreuder.'},
{'input': 'What is the academic career for Fundamentals of System Administration and Virtualization?', 'output': 'The academic career for Fundamentals of System Administration and Virtualization is GRAD (Graduate).'},
{'input': 'Are there any restrictions such as prerequisites for enrolling in Fundamentals of System Administration and Virtualization?', 'output': 'Fundamentals of System Administration and Virtualization is restricted to Computer Science Network Engineering MS Majors. This means that only students enrolled in the Computer Science Network Engineering MS program are eligible to enroll in this course. There may be additional prerequisites or requirements specific to the program.'}]
[{'input': 'What is Multidisciplinary Design Project 1?', 'output': 'Multidisciplinary Design Project 1 is a course with the code CSCI 4368. It is a senior capstone course that is part of the curriculum for students majoring in Computer Science (CSEN) at the undergraduate level. The course focuses on designing, developing, testing, and deploying software that is integrated into a mechanical system. It is a multidisciplinary course that involves collaboration with students from computer science, mechanical, and electrical disciplines. The course aims to develop project management and communication skills within a multi-disciplinary team setting. Students are required to take this course and CSCI 4378 contiguously as the project spans the entire academic year. The course is the first semester of the senior capstone sequence. It is recommended for students who are in their senior or fifth year senior year, and have completed 87-180 credits.'},
{'input': 'Can you describe CSCI 4368?', 'output': 'CSCI 4368, also known as Multidisciplinary Design Project 1, is a senior capstone course offered in the computer science curriculum. The course focuses on the design, development, testing, and deployment of software that is integrated into a mechanical system. It is a project-based course where students work in multidisciplinary teams that include members from computer science, mechanical, and electrical disciplines. The course aims to develop project management and communication skills that are essential for working in a multi-disciplinary team environment. It is the first semester of a two-semester sequence, and students are required to take this course and CSCI 4378 contiguously as the project spans the entire academic year. The course may have different prerequisites depending on whether the student is pursuing a BS or BA degree in Computer Science, and it is recommended for students who are in their senior or fifth year senior year.'},
{'input': 'How many credit hours is Multidisciplinary Design Project 1 worth?', 'output': 'The number of credit hours for Multidisciplinary Design Project 1, also known as CSCI 4368, varies by section. The specific number of credit hours for a particular section can be found in the course details or by checking with the academic advisor.'},
{'input': 'Who teaches Multidisciplinary Design Project 1?', 'output': 'Multidisciplinary Design Project 1, with the course code CSCI 4368, is taught by various instructors. Instructors who have taught this course in the past include Kotys/Steinbrenner, Steinbrenner/Kotys, and A. Paradise. The specific instructor for a given semester can be found in the course schedule or by contacting the department offering the course.'},
{'input': 'What is the academic career for Multidisciplinary Design Project 1?', 'output': 'The academic career for Multidisciplinary Design Project 1, also known as CSCI 4368, is undergraduate (UGRD). This means that the course is offered at the undergraduate level for students pursuing a bachelor\'s degree in Computer Science or a related discipline.'},
{'input': 'Are there any restrictions such as prerequisites for enrolling in Multidisciplinary Design Project 1?', 'output': 'Yes, there are restrictions and prerequisites for enrolling in Multidisciplinary Design Project 1. The course is restricted to students with 87-180 credits, which typically corresponds to senior or fifth year senior standing. Additionally, it is limited to Computer Science (CSEN) majors only. The specific prerequisites may differ for students pursuing a Bachelor of Science (BS) or Bachelor of Arts (BA) degree in Computer Science. It is recommended to contact the academic advisor or department for detailed information about the prerequisites and restrictions.'}]
[{'input': 'What is Computer Graphics?', 'output': 'Computer Graphics is the study and implementation of techniques used for designing, analyzing, and creating visual content using computers. It involves the generation, manipulation, and rendering of images, as well as the simulation of virtual environments. Computer Graphics is an interdisciplinary field that combines aspects of computer science, mathematics, physics, and art to create visually appealing and interactive digital content.'},
{'input': 'Can you describe CSCI 5229?', 'output': 'CSCI 5229 is a class titled "Computer Graphics" which focuses on the design, analysis, and implementation of computer graphics techniques. The course covers a variety of topics including interactive techniques, 3D viewing and models, clipping, transformations, projection, removal of hidden surfaces, lighting, textures, and shadows. It is a graduate-level course that requires a solid understanding of basic linear algebra. The class is taught by W. Schreuder.'},
{'input': 'How many credit hours is Computer Graphics worth?', 'output': 'Computer Graphics is worth 3 credit hours.'},
{'input': 'Who teaches Computer Graphics?', 'output': 'Computer Graphics is taught by W. Schreuder.'},
{'input': 'What is the academic career for Computer Graphics?', 'output': 'Computer Graphics is part of the GRAD academic career, indicating that it is a graduate-level course.'},
{'input': 'Are there any restrictions such as prerequisites for enrolling in Computer Graphics?', 'output': 'Yes, there is a restriction for enrolling in Computer Graphics. It is restricted to graduate students only. This means that only students pursuing a graduate degree can enroll in this course.'}]
[{'input': 'What is Datacenter Scale Computing - Methods, Systems and Techniques?', 'output': 'Datacenter Scale Computing - Methods, Systems and Techniques is a course that covers the primary problem-solving strategies, methods, and tools needed for data-intensive programs using large collections of computers, typically called "warehouse scale" or "data-center scale" computers. The course explores methods and algorithms for processing data-intensive applications, methods for deploying and managing large collections of computers in an on-demand infrastructure, and issues of large-scale computer system design.'}, {'input': 'Can you describe CSCI 5253?', 'output': 'CSCI 5253, also known as Datacenter Scale Computing - Methods, Systems and Techniques, is a course that focuses on the primary problem-solving strategies, methods, and tools required for data-intensive programs using large collections of computers. It covers topics such as data-intensive application processing, deployment and management of large computer collections, and large-scale computer system design.'}, {'input': 'How many credit hours is Datacenter Scale Computing - Methods, Systems and Techniques worth?', 'output': 'Datacenter Scale Computing - Methods, Systems and Techniques is worth 3 credit hours.'}, {'input': 'Who teaches Datacenter Scale Computing - Methods, Systems and Techniques?', 'output': 'Datacenter Scale Computing - Methods, Systems and Techniques is taught by E. Keller.'}, {'input': 'What is the academic career for Datacenter Scale Computing - Methods, Systems and Techniques?', 'output': 'The academic career for Datacenter Scale Computing - Methods, Systems and Techniques is GRAD (graduate).'}, {'input': 'Are there any restrictions such as prerequisites for enrolling in Datacenter Scale Computing - Methods, Systems and Techniques?', 'output': 'Yes, Datacenter Scale Computing - Methods, Systems and Techniques is restricted to graduate students only. It is recommended to have taken CSCI 5273 as a prerequisite. It is also offered as the same course under the codes CSCI 4253, CSPB 4253, and ECEN 5253.'}]
[{input: 'What is Network Systems?', output: 'Network Systems is a course that focuses on the design and implementation of network programs and systems. It covers various topics including network protocols, architectures, client-server computing, software-driven networking, and contemporary network hardware-software system design and programming techniques. The course requires familiarity with C and Unix.'},
{input: 'Can you describe CSCI 5273?', output: 'CSCI 5273, also known as Network Systems, is a course that covers the design and implementation of network programs and systems. It explores topics such as network protocols, architectures, client-server computing, software-driven networking, and contemporary network hardware-software system design and programming techniques. The course requires prior knowledge of C and Unix. It is recommended to have taken CSCI 4273 and CSCI 4573 as prerequisites.'},
{input: 'How many credit hours is Network Systems worth?', output: 'Network Systems is worth 3 credit hours.'},
{input: 'Who teaches Network Systems?', output: 'Network Systems is taught by S. Ha.'},
{input: 'What is the academic career for Network Systems?', output: 'Network Systems is classified as a GRAD (graduate) level course.'},
{input: 'Are there any restrictions such as prerequisites for enrolling in Network Systems?', output: 'Yes, there are prerequisites for enrolling in Network Systems. It is recommended to have taken CSCI 4273 and CSCI 4573 as prerequisites before enrolling in the course. Additionally, it is restricted to graduate students only.'}]
[{'input': 'What is Database Systems?', 'output': 'Database Systems is a class with the course code CSCI 5817. It is an advanced treatment of basic database concepts.'}, {'input': 'Can you describe CSCI 5817?', 'output': 'CSCI 5817 is a class on Database Syste... to graduate students only.'}, {'input': 'Are there any restrictions such as prerequisites for enrolling in Database Systems?', 'output': 'Yes, it is recommended to have completed CSCI 3753 as a prerequisite for enrolling in Database Systems (CSCI 5817).'}]
[{input: 'What is Concurrent Programming?', output: 'Concurrent programming is a field of computer science that deals with designing and writing programs that can execute multiple tasks simultaneously. It involves creating programs that can handle and manage multiple threads or processes, allowing different parts of the program to execute independently and concurrently. The purpose of concurrent programming is to maximize the utilization of computational resources and improve the performance and responsiveness of software applications.'},
{input: 'Can you describe CSCI 5313?', output: 'CSCI 5313, also known as Concurrent Programming, is a course that introduces the theory and practice of multicore programming. The course is primarily focused on teaching the foundations of concurrent programming, such as mutual exclusion, wait-free and lock-free synchronization, spin locks, monitors, and memory consistency models. It also covers various concurrent data structures and the techniques used in their implementations, including coarse-grained, fine-grained, optimistic, and lock-free synchronization. The course is recommended for students who have already completed the prerequisite course ECEN 3593. It is worth 3 credit hours.'},
{input: 'How many credit hours is Concurrent Programming worth?', output: 'Concurrent Programming, or CSCI 5313, is worth 3 credit hours.'},
{input: 'Who teaches Concurrent Programming?', output: 'Concurrent Programming is taught by J. Izraelevitz.'},
{input: 'What is the academic career for Concurrent Programming?', output: 'Concurrent Programming is a course that falls under the GRAD (graduate) academic career.'},
{input: 'Are there any restrictions such as prerequisites for enrolling in Concurrent Programming?', output: 'Yes, there are prerequisites for enrolling in Concurrent Programming. The course requires prerequisite courses of CSCI 2270 and ECEN 2360 or CSCI 2400 (minimum grade C). In addition, it is restricted to graduate students only.'}]
[{'input': 'What is Data Mining?', 'output': 'Data Mining is the process of discovering patterns, relationships, and useful information from large amounts of data. It involves the application of various techniques and algorithms to extract insights and make predictions from data.'},
{'input': 'Can you describe CSCI 5502?', 'output': 'CSCI 5502 is a course titled "Data Mining". It is a graduate-level course that introduces basic concepts and techniques of data mining. The focus is on discovering interesting patterns hidden in large-scale datasets. The course covers topics such as data preprocessing, data warehousing, association, classification, clustering, and mining specific data types like time-series, social networks, multimedia, and web data. The course is taught by instructors Q. Lv and A. Bastias. It is worth 3 credit hours and is equivalent to CSCI 4502.'},
{'input': 'How many credit hours is Data Mining worth?', 'output': 'Data Mining is worth 3 credit hours.'},
{'input': 'Who teaches Data Mining?', 'output': 'Data Mining is taught by instructors Q. Lv and A. Bastias.'},
{'input': 'What is the academic career for Data Mining?', 'output': 'Data Mining is classified as a graduate-level course (GRAD).'},
{'input': 'Are there any restrictions such as prerequisites for enrolling in Data Mining?', 'output': 'Yes, there is a restriction for enrolling in Data Mining. It is restricted to graduate students only.'}]
[{'input': 'What is Design and Analysis of Algorithms?', 'output': 'Design and Analysis of Algorithms is a course that focuses on techniques for algorithm design and analysis. It covers topics such as divide and conquer, dynamic programming, probabilistic methods, advanced data structures, and graph algorithms. The course also explores concepts like lower bounds, NP-completeness, and intractability. It is a key course for students studying computer science and is aimed at developing skills in algorithmic problem-solving and computational thinking.'},
 {'input': 'Can you describe CSCI 5454?', 'output': 'CSCI 5454 is a course titled "Design and Analysis of Algorithms." It is designed to teach students various techniques for algorithm design and analyze their correctness and efficiency. The course covers topics such as divide and conquer, dynamic programming, probabilistic methods, advanced data structures, and graph algorithms. Students will also learn about lower bounds, NP-completeness, and intractability. The course is highly recommended for students who have completed CSCI 2270 or its equivalent.'},
 {'input': 'How many credit hours is Design and Analysis of Algorithms worth?', 'output': 'Design and Analysis of Algorithms is worth 3 credit hours.'},
 {'input': 'Who teaches Design and Analysis of Algorithms?', 'output': 'Design and Analysis of Algorithms is taught by H. Bennett.'},
 {'input': 'What is the academic career for Design and Analysis of Algorithms?', 'output': 'Design and Analysis of Algorithms is a graduate-level course. It is intended for graduate students.'},
 {'input': 'Are there any restrictions such as prerequisites for enrolling in Design and Analysis of Algorithms?', 'output': 'Yes, there is a prerequisite for enrolling in Design and Analysis of Algorithms. It is recommended that students have completed CSCI 2270 or its equivalent before taking this course. Additionally, Design and Analysis of Algorithms is restricted to graduate students only.'}]
[{'input': 'What is Designing for Defense 1?', 'output': 'Designing for Defense 1 is a class offered at the graduate level in the field of computer science. It is a part of the national service program called Hacking for Defense, which is conducted at leading research universities across the country. In this class, interdisciplinary teams are selected through a competitive process to work on real-world national security challenges. The teams collaborate closely with national security agencies and use the Lean Launchpad entrepreneurship methodology to develop engineering and business concepts to solve these challenges for special operations forces, the intelligence community, and other government agencies. Winning teams may receive real-world capital investment. Designing for Defense 1 is the first semester of a two-course sequence, and it is taken along with other related courses throughout the academic year.'},
 {'input': 'Can you describe CSCI 5550?', 'output': 'CSCI 5550 is a class titled "Designing for Defense 1." It is a part of the Hacking for Defense program, which is a national service program conducted at leading research universities. The class involves interdisciplinary teams that are selected through a competitive process to work on real-world national security challenges. These teams collaborate closely with national security agencies and utilize the Lean Launchpad entrepreneurship methodology to develop engineering and business concepts for solving these challenges. The class is open to graduate students only and is worth 3 credit hours.'},
 {'input': 'How many credit hours is Designing for Defense 1 worth?', 'output': 'Designing for Defense 1 is worth 3 credit hours.'},
 {'input': 'Who teaches Designing for Defense 1?', 'output': 'Designing for Defense 1 is taught by A. Meyer.'},
 {'input': 'What is the academic career for Designing for Defense 1?', 'output': 'Designing for Defense 1 is offered at the graduate level.'},
 {'input': 'Are there any restrictions such as prerequisites for enrolling in Designing for Defense 1?', 'output': 'Yes, there is a restriction for enrolling in Designing for Defense 1. It is restricted to graduate students only. There may be additional prerequisites or requirements, but they are not specified in the provided information.'}]
[{input: 'What is Introduction to Virtual Reality?', output: 'Introduction to Virtual Reality is a course that introduces students to the field of virtual reality (VR). It covers the historical development of virtual reality technologies and virtual reality as a research field, the mathematics of 3D coordinate systems, fundamental principles, algorithms, and design patterns in developing interactive virtual environments, the perceptual science behind mixed reality technologies, and libraries and tools for creating VR experiences.'},
{input: 'Can you describe CSCI 5616?', output: 'CSCI 5616, also known as Introduction to Virtual Reality, is a course that covers the historical development of virtual reality technologies and virtual reality as a research field. It teaches the mathematics of 3D coordinate systems, fundamental principles, algorithms, and design patterns in developing interactive virtual environments. The course also explores the perceptual science behind mixed reality technologies and introduces students to libraries and tools for creating VR experiences. It is recommended to have prerequisite knowledge in CSCI 2270 or CSCI 2275 (minimum grade B). The course is worth 3 credit hours and is taught by P. Gyory. It is restricted to graduate students only.'},
{input: 'How many credit hours is Introduction to Virtual Reality worth?', output: 'Introduction to Virtual Reality is worth 3 credit hours.'},
{input: 'Who teaches Introduction to Virtual Reality?', output: 'Introduction to Virtual Reality is taught by P. Gyory.'},
{input: 'What is the academic career for Introduction to Virtual Reality?', output: 'The academic career for Introduction to Virtual Reality is GRAD (graduate students only).'},
{input: 'Are there any restrictions such as prerequisites for enrolling in Introduction to Virtual Reality?', output: 'Yes, there are prerequisites for enrolling in Introduction to Virtual Reality. It is recommended to have prerequisite knowledge in CSCI 2270 or CSCI 2275 (minimum grade B). Additionally, the course is restricted to graduate students only.'}]
[{'input': 'What is Computer Science PhD Career Development?', 'output': 'Computer Science PhD Career Development is a course designed to help students make the most of their CS PhD by understanding and preparing for a career as a computer science researcher in academia, industry, and government. It is a class that students need to take once they complete the Preliminary Exam and before their proposal defense.'}, {'input': 'Can you describe CSCI 6200?', 'output': 'CSCI 6200 is the class code for Computer Science PhD Career Development. It is a course that focuses on providing guidance and training to Computer Science PhD students on career development. The class aims to prepare students for various career paths in academia, industry, and government by equipping them with the necessary skills and knowledge.'}, {'input': 'How many credit hours is Computer Science PhD Career Development worth?', 'output': 'Computer Science PhD Career Development is worth 1 credit hour.'}, {'input': 'Who teaches Computer Science PhD Career Development?', 'output': 'Computer Science PhD Career Development is taught by S. Mishra.'}, {'input': 'What is the academic career for Computer Science PhD Career Development?', 'output': 'The academic career for Computer Science PhD Career Development is categorized as GRAD, which means it is a graduate-level course.'}, {'input': 'Are there any restrictions such as prerequisites for enrolling in Computer Science PhD Career Development?', 'output': 'Yes, there are prerequisites for enrolling in Computer Science PhD Career Development. Students are required to have completed the prerequisite course of CSCI 6000 with a minimum grade of B. Additionally, enrollment is restricted to Computer Science (CSCI) MS and PhD students only.'}]
[{'input': 'What is Introduction to the Computer Science PhD Program?', 'output': 'Introduction to the Computer Science PhD Program is a class with the code CSCI 6000. It is a course that instructs new Ph.D students in Computer Science on how to obtain a Ph.D and how to become an effective member of the computer science research community. The class makes students aware of the formal requirements, educational objectives, and research themes. It provides evaluative criteria and guidelines for all objectives to be achieved. The class is worth 1 credit hour and is restricted to Computer Science (CSCI) PhD students only. The class instructor is S. Mishra.'}, {'input': 'Can you describe CSCI 6000?', 'output': 'CSCI 6000, also known as Introduction to the Computer Science PhD Program, is a course that is designed to instruct new Ph.D students in Computer Science. The course focuses on helping students understand how to obtain a Ph.D and become effective members of the computer science research community. It covers the formal requirements, educational objectives, and research themes related to the Ph.D program. The course provides evaluative criteria and guidelines to help students achieve their objectives. The class is worth 1 credit hour and is taught by S. Mishra. It is restricted to Computer Science (CSCI) PhD students only.'}, {'input': 'How many credit hours is Introduction to the Computer Science PhD Program worth?', 'output': 'Introduction to the Computer Science PhD Program is worth 1 credit hour.'}, {'input': 'Who teaches Introduction to the Computer Science PhD Program?', 'output': 'Introduction to the Computer Science PhD Program is taught by S. Mishra.'}, {'input': 'What is the academic career for Introduction to the Computer Science PhD Program?', 'output': 'The academic career for Introduction to the Computer Science PhD Program is GRAD (graduate).'}, {'input': 'Are there any restrictions such as prerequisites for enrolling in Introduction to the Computer Science PhD Program?', 'output': 'Yes, there are restrictions for enrolling in Introduction to the Computer Science PhD Program. It is restricted to Computer Science (CSCI) PhD students only.'}]
[{input: "What is Cognitive Science Research Practicum 2?", output: "Cognitive Science Research Practicum 2 is an independent, interdisciplinary research project in cognitive science for advanced graduate students pursuing a joint Ph.D in an approved core discipline and cognitive science. The research projects integrate at least two areas within the cognitive sciences, including psychology, computer science, linguistics, education, and philosophy. Students need commitments from two mentors for their project. It is the same as EDUC 6516, LING 7425, PHIL 7425, PSYC 7425, and SLHS 7428."}, {input: "Can you describe CSCI 7422?", output: "CSCI 7422 is the course code for Cognitive Science Research Practicum 2. It is an independent, interdisciplinary research project in cognitive science for advanced graduate students pursuing a joint Ph.D in an approved core discipline and cognitive science. The research projects integrate at least two areas within the cognitive sciences, including psychology, computer science, linguistics, education, and philosophy. Students need commitments from two mentors for their project."}, {input: "How many credit hours is Cognitive Science Research Practicum 2 worth?", output: "Cognitive Science Research Practicum 2 is worth 2 credit hours."}, {input: "Who teaches Cognitive Science Research Practicum 2?", output: "Cognitive Science Research Practicum 2 is taught by T. Sumner."}, {input: "What is the academic career for Cognitive Science Research Practicum 2?", output: "The academic career for Cognitive Science Research Practicum 2 is GRAD (graduate)."}, {input: "Are there any restrictions such as prerequisites for enrolling in Cognitive Science Research Practicum 2?", output: "Yes, there are prerequisites for enrolling in Cognitive Science Research Practicum 2. Students must have completed LING 7415, PSYC 7415, CSCI 7412, or EDUC 6506 with a minimum grade of B. Additionally, enrollment is restricted to graduate students only."}]
